{"version":3,"sources":["main.ts"],"names":["webp_support","img","Image","webp_elements","document","getElementsByClassName","webp_class","elements","i","length","ele","item","classList","remove","add","onload","height","width","onerror","src"],"mappings":"AAIA,IAAIA,cAAe,GACnB,WACE,IAAMC,EAAM,IAAIC,MAGVC,EAAgBC,SAASC,uBAAuB,UAGtD,SAASC,EAAWC,GAClB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAASE,OAAQD,IAAK,CACxC,IAAME,EAAMH,EAASI,KAAKH,GAC1BE,EAAIE,UAAUC,OAAO,UACjBb,aACFU,EAAIE,UAAUE,IAAI,QAElBJ,EAAIE,UAAUE,IAAI,YAKxBb,EAAIc,OAAS,WACXf,gBAA+B,EAAbC,EAAIe,QAA0B,EAAZf,EAAIgB,OACxCX,EAAWH,IAGbF,EAAIiB,QAAU,WACZlB,cAAe,EACfM,EAAWH,IAGbF,EAAIkB,IAAM,gBA7BZ","file":"../main.js","sourcesContent":["/* Check if the browser has WebP support and load the smaller WebP images\n * instead. Elements with the \"webp_q\" class will have that class removed\n * and have the class \"webp\" or \"no-webp\" applied depending on browser support.\n*/\nlet webp_support = false;\n(() => {\n  const img = new Image();\n\n  /* Set classes to determine which pics to load */\n  const webp_elements = document.getElementsByClassName(\"webp_q\");\n\n  /* Helper function to keep it DRY */\n  function webp_class(elements: HTMLCollectionOf<Element>) {\n    for (let i = 0; i < elements.length; i++) {\n      const ele = elements.item(i);\n      ele.classList.remove(\"webp_q\");\n      if (webp_support) {\n        ele.classList.add(\"webp\");\n      } else {\n        ele.classList.add(\"no-webp\");\n      }\n    }\n  }\n\n  img.onload = () => {\n    webp_support = !!(img.height > 0 && img.width > 0);\n    webp_class(webp_elements);\n  };\n\n  img.onerror = () => {\n    webp_support = false;\n    webp_class(webp_elements);\n  };\n\n  img.src = \"img/logo.webp\";\n})();\n"]}